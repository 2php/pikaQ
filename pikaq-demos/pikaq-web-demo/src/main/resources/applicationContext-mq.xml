<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/rabbit
        http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
	    http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">


    <!-- config for connection factory-->
    <bean id="connectionFactory"
          class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
        <constructor-arg value="${host}"/>
        <constructor-arg value="${port}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <property name="channelCacheSize" value="25"/>
    </bean>

    <!-- config for broker-->
    <rabbit:admin connection-factory="connectionFactory"/>

    <!-- convert: json-->
    <bean id="jsonConverterWithDefaultType"
          class="org.springframework.amqp.support.converter.JsonMessageConverter">
    </bean>

    <!-- message sender -->
    <rabbit:template id="template" message-converter="jsonConverterWithDefaultType"
                     connection-factory="connectionFactory" retry-template="retryTemplate"/>
    <bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="backOffPolicy">
            <bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
                <property name="initialInterval" value="500"/>
                <property name="multiplier" value="10.0"/>
                <property name="maxInterval" value="10000"/>
            </bean>
        </property>
    </bean>

    <!-- pikaq: message sender gateway-->
    <bean class="com.baidu.pikaq.client.producer.gateway.impl.PikaQGatewayDefaultImpl">
        <property name="rabbitTemplate" ref="template"/>
    </bean>

    <!-- rabbitmq: message sender gateway-->
    <bean class="com.baidu.pikaq.client.producer.gateway.impl.RabbitQGatewayDefaultImpl">
        <property name="rabbitTemplate" ref="template"/>
    </bean>

    <!-- queue -->
    <rabbit:queue id="pikaQWebDemoLogMessageQueue" name="pikaQWebDemoLogMessageQueue"/>
    <rabbit:queue id="pikaQWebDemoLogMessageQueueConsumerError" name="pikaQWebDemoLogMessageQueueConsumerError"/>
    <!-- queue -->
    <rabbit:queue id="pikaQWebDemoLogMessageQueue2" name="pikaQWebDemoLogMessageQueue2"/>

    <!-- consumer service -->
    <bean name="createHandler"
          class="com.baidu.pikaq.demo.service.campaign.message.consumer.CampaignCreateConsumerHandler">
    </bean>
    <!-- consumer service -->
    <bean name="updateHandler"
          class="com.baidu.pikaq.demo.service.campaign.message.consumer.CampaignUpdateConsumerHandler">
    </bean>

    <!-- listener container -->
    <listener-container concurrency="5" connection-factory="connectionFactory"
                        xmlns="http://www.springframework.org/schema/rabbit">
        <listener ref="createHandler" queues="pikaQWebDemoLogMessageQueue"/>
        <listener ref="updateHandler" queues="pikaQWebDemoLogMessageQueue2"/>
    </listener-container>

</beans>
